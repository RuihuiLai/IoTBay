/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 * Author:  13725
 * Created: 2021年5月8日
 */

CREATE TABLE CUSTOMER(
    USERID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 100000, INCREMENT BY 1),
    FIRSTNAME VARCHAR(255),
    LASTNAME VARCHAR(255),
    EMAIL VARCHAR(255),
    PASSWORD VARCHAR(255),
    GENDER VARCHAR(255),
    ADDRESS VARCHAR(255),
    DOB DATE,
    PHONENUMBER VARCHAR(255),
    SUBSCRIPTION BOOLEAN,
    PRIMARY KEY(USERID));

CREATE TABLE STAFF(
    USERID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 100000, INCREMENT BY 1),
    FIRSTNAME VARCHAR(255),
    LASTNAME VARCHAR(255),
    EMAIL VARCHAR(255),
    PASSWORD VARCHAR(255),
    GENDER VARCHAR(255),
    ADDRESS VARCHAR(255),
    DOB DATE,
    PHONENUMBER VARCHAR(255),
    STARTDATE DATE,
    ENDDATE DATE,
    POSITION VARCHAR(255),
    PRIMARY KEY(USERID));

CREATE TABLE SYSTEMADMIN(
    USERID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 100000, INCREMENT BY 1),
    FIRSTNAME VARCHAR(255),
    LASTNAME VARCHAR(255),
    EMAIL VARCHAR(255),
    PASSWORD VARCHAR(255),
    GENDER VARCHAR(255),
    ADDRESS VARCHAR(255),
    DOB DATE,
    PHONENUMBER VARCHAR(255),
    STARTDATE DATE,
    ENDDATE DATE,
    POSITION VARCHAR(255),
    PRIMARY KEY(USERID));

CREATE TABLE PRODUCT (
    PRODUCTID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 10000, INCREMENT BY 1),
    "NAME" VARCHAR(255),
    CATEGORY VARCHAR(255),
    PRICE DOUBLE NOT NULL,
    DESCRIPTION VARCHAR(1000),
    STOCK INTEGER,
    PRIMARY KEY(PRODUCTID));

CREATE TABLE SHIPMENT(
    SHIPMENTID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 100000, INCREMENT BY 1),
    UNITNUMBER VARCHAR(255),
    STREETNAME VARCHAR(255),
    SUBURB VARCHAR(255),
    POSTCODE VARCHAR(255),
    "STATE" VARCHAR(255),
    USERID VARCHAR(255),
    SHIPMENTDATE VARCHAR(255),
    PRIMARY KEY(SHIPMENTID));

CREATE TABLE BROWSINGHISTORY(
    BROWSINGID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 100000, INCREMENT BY 1),
    USERID INTEGER NOT NULL,
    PRODUCTID INTEGER NOT NULL,
    PRIMARY KEY(BROWSINGID));

CREATE TABLE ORDERHISTORY(
    ORDERHISTORYID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 100000, INCREMENT BY 1),
    USERID INTEGER NOT NULL,
    ORDERID INTEGER NOT NULL,
    PRIMARY KEY(ORDERHISTORYID));

CREATE TABLE WISHLIST(
    WISHLISTID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 100000, INCREMENT BY 1),
    USERID INTEGER NOT NULL,
    PRODUCTID INTEGER NOT NULL,
    PRIMARY KEY(WISHLISTID));

CREATE TABLE "ORDER" (
    ORDERID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 100000, INCREMENT BY 1),
    SHOPPINGLIST VARCHAR(255),
    STATUS VARCHAR(255),
    ORDERTIME VARCHAR(255),
    ORDERDATE Date,
    SHIPMENTID INTEGER NOT NULL,
    PAYMENTID INTEGER NOT NULL,
    USERID INTEGER NOT NULL,
    PRODUCTID INTEGER NOT NULL,
    TOTALPRICE DOUBLE,
    PRIMARY KEY(ORDERID));

CREATE TABLE PAYMENT(
    PAYMENTID INTEGER NOT NULL  ALWAYS AS IDENTITY(START WITH 100000, INCREMENT BY 1),
    "DATE" DATE,
    PAYMENTMETHOD VARCHAR(255),
    PAYMENTAMOUNT INTEGER,
    ORDERID INTEGER NOT NULL,
    PRIMARY KEY(PAYMENTID),
    FOREIGN KEY (ORDERID) REFERENCES "ORDER"(ORDERID));

CREATE TABLE ACCESSLOG(
    ACCESSLOGID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 100000, INCREMENT BY 1),
    LOGINDATE date(255),
    REGISTERTIME date(255),
    LOGOUTDATE date(255),
    CUSTOMERID INTEGER NOT NULL,
    USERID INTEGER NOT NULL,
    ORDERID INTEGER NOT NULL,
    PRODUCTID INTEGER NOT NULL,
    PRIMARY KEY(ACCESSLOGID),
    FOREIGN KEY(CUSTOMERID),
    FOREIGN KEY(USERID),
    FOREIGN KEY(ORDERID),
    FOREIGN KEY(PRODUCTID));ODUCTID));